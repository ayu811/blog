{"version":3,"file":"component---src-pages-index-jsx-77f3ef1d1e982080b794.js","mappings":"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","sources":["webpack://revista-gatsby-starter/./src/components/Hero.jsx","webpack://revista-gatsby-starter/./src/components/RecentPosts.jsx","webpack://revista-gatsby-starter/./src/components/featured/Top.jsx","webpack://revista-gatsby-starter/./src/components/featured/Trending.jsx","webpack://revista-gatsby-starter/./src/components/featured/Popular.jsx","webpack://revista-gatsby-starter/./src/components/featured/Featured.jsx","webpack://revista-gatsby-starter/./src/components/Notification.jsx","webpack://revista-gatsby-starter/./src/pages/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n// import { StaticImage } from 'gatsby-plugin-image'\r\n// import { graphql, useStaticQuery } from 'gatsby'\r\nimport { Link } from 'gatsby'\r\nimport slugify from 'slugify'\r\nimport { categories } from './utils/heroCategories'\r\n\r\n// export const query = graphql`\r\n//   {\r\n//     allMdx {\r\n//       distinct(field: frontmatter___category)\r\n//     }\r\n//   }\r\n//   `\r\n\r\nconst Hero = () => {\r\n  // const {\r\n  //   allMdx: {distinct},\r\n  // } = useStaticQuery(query);\r\n\r\n  return (\r\n    <HeroStyles>\r\n      <div className=\"hero\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-7 col-12 hero-text\">\r\n            <h4>Computing Technology Deep Dive</h4>\r\n            <h1>\r\n              <span>AI, Quantum Computing,</span>\r\n              <br /> and More\r\n            </h1>\r\n            <p>Explore the fascinating world of cutting-edge technology</p>\r\n          </div>\r\n          <div className=\"col-lg-5 col-12\">\r\n            <div className=\"hero-categories\">\r\n              {categories.map((category, index, arr) => {\r\n                //check if last element. If it is, custom link for \"All Categories\"\r\n                if (arr.length - 1 === index) {\r\n                  const categoryStyles = {\r\n                    boxShadow: `0 0 40px`,\r\n                    backgroundColor: category.color,\r\n                    color: category.color,\r\n                  }\r\n\r\n                  return (\r\n                    <Link\r\n                      style={categoryStyles}\r\n                      className=\"hero-category\"\r\n                      key={index}\r\n                      to={`/categories`}\r\n                    >\r\n                      <div className=\"overlay\">\r\n                        <div className=\"category-text-color\">\r\n                          {category.category}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  )\r\n                } else {\r\n                  const categoryStyles = {\r\n                    boxShadow: `0 0 40px`,\r\n                    backgroundColor: category.color,\r\n                    color: category.color,\r\n                  }\r\n\r\n                  return (\r\n                    <Link\r\n                      style={categoryStyles}\r\n                      className=\"hero-category\"\r\n                      key={index}\r\n                      to={`/${slugify(category.category).toLowerCase()}`}\r\n                    >\r\n                      <div className=\"overlay\">\r\n                        <div className=\"category-text-color\">\r\n                          {category.category}\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  )\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </HeroStyles>\r\n  )\r\n}\r\n\r\nexport const HeroStyles = styled.header`\r\n  border-bottom: 1px solid var(--primary-1);\r\n\r\n  .hero {\r\n    display: flex;\r\n    padding: 6rem 0;\r\n    align-items: center;\r\n    justify-content: center;\r\n    max-width: 83vw;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media only screen and (min-width: 1600px) {\r\n    .hero {\r\n      max-width: 75vw;\r\n    }\r\n  }\r\n\r\n  .row {\r\n    align-items: center;\r\n  }\r\n\r\n  .hero-text {\r\n    padding-right: 3rem;\r\n  }\r\n\r\n  .hero h1 {\r\n    line-height: 5rem;\r\n  }\r\n\r\n  .hero h1 span {\r\n    display: inline-block;\r\n    position: relative;\r\n    font-size: 110%;\r\n  }\r\n\r\n  .hero h1 span::after {\r\n    position: absolute;\r\n    content: '';\r\n    background-color: #ace7ff;\r\n    width: 100%;\r\n    height: 15px;\r\n    left: 0;\r\n    bottom: 11px;\r\n    z-index: -1;\r\n  }\r\n\r\n  .hero h4 {\r\n    color: var(--grey-8);\r\n    margin-bottom: 1.5rem;\r\n    text-transform: uppercase;\r\n    font-size: 17px;\r\n  }\r\n\r\n  .hero p {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .hero-categories {\r\n    /* flex-wrap: wrap; */\r\n  }\r\n\r\n  .category-text-color {\r\n    color: var(--grey-6);\r\n  }\r\n\r\n  .hero-category {\r\n    /* background-color: #b8ffec; */\r\n    padding: 0rem 2rem;\r\n    line-height: 60px;\r\n    margin: 25px 25px 0 0;\r\n    border-radius: 10px;\r\n    color: #3a3838;\r\n    min-width: 80px;\r\n    display: inline-block;\r\n    transition: all 0.1s linear;\r\n\r\n    &:hover {\r\n      filter: brightness(103%);\r\n      transition: all 0.1s linear;\r\n    }\r\n\r\n    /* box-shadow: 0 0 25px black; */\r\n  }\r\n\r\n  .hero-category:hover > .overlay {\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0.95;\r\n    transition-duration: 0.2s;\r\n  }\r\n\r\n  @media only screen and (max-width: 460px) {\r\n    .hero-categories {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 1147px) {\r\n    .hero-category {\r\n      font-size: 90%;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 1092px) {\r\n    .hero-category {\r\n      padding: 0 1.2rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 991px) {\r\n    .hero-categories {\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 502px) {\r\n    .hero-category,\r\n    h4,\r\n    h1,\r\n    p {\r\n      text-align: center;\r\n    }\r\n\r\n    .hero-text {\r\n      padding: 0;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 358px) {\r\n    h1 {\r\n      font-size: 2.6rem;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\nimport { AiOutlineClockCircle } from 'react-icons/ai'\r\nimport { GoCalendar } from 'react-icons/go'\r\nimport { Link } from 'gatsby'\r\nimport SidebarWide from './Sidebar/indexWide'\r\nimport { getColor } from './utils/heroCategories'\r\nimport slugify from 'slugify'\r\nimport '../components/featured/features-styles.scss'\r\n\r\nconst RecentPosts = () => {\r\n  const data = useStaticQuery(query)\r\n\r\n  const {\r\n    allMdx: { nodes: posts },\r\n  } = data\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 col-12\">\r\n          <h2 className=\"section-title\">Recent Articles</h2>\r\n\r\n          {posts.map(post => {\r\n            const { title, category, date, slug, image } = post.frontmatter\r\n\r\n            return (\r\n              <article\r\n                key={post.id}\r\n                className=\"card card-bg card-shadow recent-article-mb\"\r\n              >\r\n                <Link\r\n                  to={`/${category.toLowerCase()}/${\r\n                    slug || slugify(title, { lower: true })\r\n                  }`}\r\n                >\r\n                  <GatsbyImage\r\n                    image={getImage(image)}\r\n                    alt={title}\r\n                    className=\"img\"\r\n                  />\r\n                  {/* <img className='top-and-popular-img' src={imageSource} alt={title} /> */}\r\n                </Link>\r\n\r\n                <div className=\"card-body\">\r\n                  <Link\r\n                    to={`/${category.toLowerCase()}/${\r\n                      slug || slugify(title, { lower: true })\r\n                    }`}\r\n                  >\r\n                    <h3 className=\"recent-articles-heading\">{title}</h3>\r\n                  </Link>\r\n\r\n                  <ul className=\"card-meta list-inline\">\r\n                    <li className=\"list-inline-item\">\r\n                      <AiOutlineClockCircle />\r\n                      {Math.ceil(post.fields.timeToRead.words / 275)} Min Read\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <GoCalendar /> {date}\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                      <ul className=\"card-meta-tag list-inline\">\r\n                        <li className=\"list-inline-item\">\r\n                          <Link\r\n                            to={`/${category.toLowerCase()}`}\r\n                            className=\"category-link\"\r\n                            style={{\r\n                              color: getColor(category),\r\n                              backgroundColor: getColor(category),\r\n                            }}\r\n                          >\r\n                            <div className=\"category-text-color\">\r\n                              {category}\r\n                            </div>\r\n                          </Link>\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n                  </ul>\r\n                  <Link\r\n                    to={`/${category.toLowerCase()}/${\r\n                      slug || slugify(title, { lower: true })\r\n                    }`}\r\n                  >\r\n                    <p className=\"excerpt\">{post.excerpt}</p>\r\n                  </Link>\r\n                  <a\r\n                    className=\"btn btn-outline-primary\"\r\n                    href={`/${category.toLowerCase()}/${slugify(title, {\r\n                      lower: true,\r\n                    })}`}\r\n                  >\r\n                    Read More\r\n                  </a>\r\n                </div>\r\n              </article>\r\n            )\r\n          })}\r\n        </div>\r\n        <SidebarWide />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query RecentPosts {\r\n    allMdx(sort: { frontmatter: { date: DESC } }, limit: 3) {\r\n      nodes {\r\n        excerpt\r\n        frontmatter {\r\n          title\r\n          category\r\n          date(formatString: \"MMMM, Do YYYY\")\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(placeholder: BLURRED, layout: CONSTRAINED)\r\n            }\r\n          }\r\n        }\r\n        id\r\n        fields {\r\n          timeToRead {\r\n            words\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default RecentPosts\r\n","import React from 'react'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\nimport { AiOutlineClockCircle } from 'react-icons/ai'\r\nimport { GoCalendar } from 'react-icons/go'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport { Link } from 'gatsby'\r\nimport { getColor } from '../utils/heroCategories'\r\nimport slugify from 'slugify'\r\nimport './features-styles.scss'\r\n\r\nconst query = graphql`\r\n  query Top {\r\n    allMdx(\r\n      limit: 1\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { topPick: { eq: true } } }\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"MMM, Do YYYY\")\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\r\n            }\r\n          }\r\n          category\r\n        }\r\n        id\r\n\r\n        excerpt(pruneLength: 60)\r\n        fields {\r\n          timeToRead {\r\n            words\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Top = () => {\r\n  const data = useStaticQuery(query)\r\n\r\n  const {\r\n    allMdx: { nodes: posts },\r\n  } = data\r\n\r\n  return (\r\n    <div className=\"col-md-4 col-12\">\r\n      <h2 className=\"section-title\">Top Article</h2>\r\n\r\n      {posts.map(post => {\r\n        const { title, category, date, image } = post.frontmatter\r\n\r\n        return (\r\n          <article key={post.id} className=\"card card-bg card-shadow\">\r\n            <Link\r\n              to={`/${category.toLowerCase()}/${slugify(title, {\r\n                lower: true,\r\n              })}`}\r\n            >\r\n              <GatsbyImage\r\n                image={getImage(image)}\r\n                alt={title}\r\n                className=\"img\"\r\n              />\r\n              {/* <img className='top-and-popular-img' src={imageSource} alt={title} /> */}\r\n            </Link>\r\n\r\n            <div className=\"card-body\">\r\n              <Link\r\n                to={`/${category.toLowerCase()}/${slugify(title, {\r\n                  lower: true,\r\n                })}`}\r\n              >\r\n                <h3>{title}</h3>\r\n              </Link>\r\n\r\n              <ul className=\"card-meta list-inline\">\r\n                <li className=\"list-inline-item\">\r\n                  <AiOutlineClockCircle />\r\n                  {Math.ceil(post.fields.timeToRead.words / 275)} Min Read\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <GoCalendar /> {date}\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <ul className=\"card-meta-tag list-inline\">\r\n                    <li className=\"list-inline-item\">\r\n                      <Link\r\n                        to={`/${category.toLowerCase()}`}\r\n                        className=\"category-link\"\r\n                        style={{\r\n                          color: getColor(category),\r\n                          backgroundColor: getColor(category),\r\n                        }}\r\n                      >\r\n                        <div className=\"category-text-color\">{category}</div>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                to={`/${category.toLowerCase()}/${slugify(title, {\r\n                  lower: true,\r\n                })}`}\r\n              >\r\n                <p className=\"excerpt\">{post.excerpt}</p>\r\n              </Link>\r\n              <a\r\n                className=\"btn btn-outline-primary\"\r\n                href={`/${category.toLowerCase()}/${slugify(title, {\r\n                  lower: true,\r\n                })}`}\r\n              >\r\n                Read More\r\n              </a>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Top\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\nimport { AiOutlineClockCircle } from 'react-icons/ai'\r\nimport { GoCalendar } from 'react-icons/go'\r\nimport slugify from 'slugify'\r\nimport './features-styles.scss'\r\n\r\nconst query = graphql`\r\n  query Trending {\r\n    allMdx(\r\n      limit: 3\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { trending: { eq: true } } }\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          category\r\n          date(formatString: \"MMM, Do YYYY\")\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(\r\n                layout: CONSTRAINED\r\n                placeholder: BLURRED\r\n                height: 100\r\n                width: 100\r\n              )\r\n            }\r\n          }\r\n        }\r\n        id\r\n\r\n        fields {\r\n          timeToRead {\r\n            words\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Trending = () => {\r\n  const data = useStaticQuery(query)\r\n\r\n  const {\r\n    allMdx: { nodes: posts },\r\n  } = data\r\n\r\n  return (\r\n    <div className=\"col-md-4 col-12\">\r\n      <h2 className=\"section-title trending-title\">Trending</h2>\r\n\r\n      {posts.map(post => {\r\n        const { title, category, date, image } = post.frontmatter\r\n\r\n        return (\r\n          <article\r\n            key={post.id}\r\n            className=\"card card-body card-bg card-shadow trending-card\"\r\n          >\r\n            <Link\r\n              to={`/${category.toLowerCase()}/${slugify(title, {\r\n                lower: true,\r\n              })}`}\r\n            >\r\n              <GatsbyImage\r\n                image={getImage(image)}\r\n                alt={title}\r\n                className=\"trending-img\"\r\n              />\r\n              {/* <img className='top-and-popular-img' src={imageSource} alt={title} /> */}\r\n            </Link>\r\n\r\n            <div className=\"trending-meta\">\r\n              <Link\r\n                to={`/${category.toLowerCase()}/${slugify(title, {\r\n                  lower: true,\r\n                })}`}\r\n              >\r\n                <h3>{title}</h3>\r\n              </Link>\r\n\r\n              <ul className=\"card-meta list-inline\">\r\n                <li className=\"list-inline-item\">\r\n                  <AiOutlineClockCircle />\r\n                  {Math.ceil(post.fields.timeToRead.words / 275)} Min Read\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <GoCalendar /> {date}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Trending\r\n","import React from 'react'\r\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\r\nimport { AiOutlineClockCircle } from 'react-icons/ai'\r\nimport { GoCalendar } from 'react-icons/go'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\nimport { Link } from 'gatsby'\r\nimport { getColor } from '../utils/heroCategories'\r\nimport slugify from 'slugify'\r\nimport './features-styles.scss'\r\n\r\nconst query = graphql`\r\n  query Popular {\r\n    allMdx(\r\n      limit: 1\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { popular: { eq: true } } }\r\n    ) {\r\n      nodes {\r\n        frontmatter {\r\n          title\r\n          date(formatString: \"MMM, Do YYYY\")\r\n          image {\r\n            childImageSharp {\r\n              gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\r\n            }\r\n          }\r\n          category\r\n        }\r\n        id\r\n        excerpt(pruneLength: 60)\r\n        fields {\r\n          timeToRead {\r\n            words\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Popular = () => {\r\n  const data = useStaticQuery(query)\r\n\r\n  const {\r\n    allMdx: { nodes: posts },\r\n  } = data\r\n\r\n  return (\r\n    <div className=\"col-md-4 col-12\">\r\n      <h2 className=\"section-title\">Popular</h2>\r\n\r\n      {posts.map(post => {\r\n        const { title, category, date, image } = post.frontmatter\r\n\r\n        return (\r\n          <article key={post.id} className=\"card card-bg card-shadow\">\r\n            <Link\r\n              to={`/${category.toLowerCase()}/${slugify(title, {\r\n                lower: true,\r\n              })}`}\r\n            >\r\n              <GatsbyImage\r\n                image={getImage(image)}\r\n                alt={title}\r\n                className=\"img\"\r\n              />\r\n              {/* <img className='top-and-popular-img' src={imageSource} alt={title} /> */}\r\n            </Link>\r\n\r\n            <div className=\"card-body\">\r\n              <Link\r\n                to={`/${category.toLowerCase()}/${slugify(title, {\r\n                  lower: true,\r\n                })}`}\r\n              >\r\n                <h3>{title}</h3>\r\n              </Link>\r\n\r\n              <ul className=\"card-meta list-inline\">\r\n                <li className=\"list-inline-item\">\r\n                  <AiOutlineClockCircle />\r\n                  {Math.ceil(post.fields.timeToRead.words / 275)} Min Read\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <GoCalendar /> {date}\r\n                </li>\r\n                <li className=\"list-inline-item\">\r\n                  <ul className=\"card-meta-tag list-inline\">\r\n                    <li className=\"list-inline-item\">\r\n                      <Link\r\n                        to={`/${category.toLowerCase()}`}\r\n                        className=\"category-link\"\r\n                        style={{\r\n                          color: getColor(category),\r\n                          backgroundColor: getColor(category),\r\n                        }}\r\n                      >\r\n                        <div className=\"category-text-color\">{category}</div>\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n              </ul>\r\n              <Link\r\n                to={`/${category.toLowerCase()}/${slugify(title, {\r\n                  lower: true,\r\n                })}`}\r\n              >\r\n                <p className=\"excerpt\">{post.excerpt}</p>\r\n              </Link>\r\n              <a\r\n                className=\"btn btn-outline-primary\"\r\n                href={`/${category.toLowerCase()}/${slugify(title, {\r\n                  lower: true,\r\n                })}`}\r\n              >\r\n                Read More\r\n              </a>\r\n            </div>\r\n          </article>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popular\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Top from './Top'\r\nimport Trending from './Trending'\r\nimport Popular from './Popular'\r\nimport './features-styles.scss'\r\n\r\nconst Featured = () => {\r\n  return (\r\n    <FeaturedStyles>\r\n      <div className=\"featured-section container\">\r\n        <div className=\"row\">\r\n          <Top />\r\n          <Trending />\r\n          <Popular />\r\n        </div>\r\n      </div>\r\n    </FeaturedStyles>\r\n  )\r\n}\r\n\r\nexport const FeaturedStyles = styled.section`\r\nborder-bottom: 1px solid var(--primary-1);\r\n\r\n  .featured-section {\r\n    padding: 5rem 0;\r\n  }\r\n\r\n  @media screen and (max-width: 767px) {\r\n    .featured-section{\r\n      padding: 0 0 5rem 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    .featured-section{\r\n      padding: 0 15px 0 15px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default Featured\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\n\r\nconst Notification = () => {\r\n  return <div></div>\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\nimport Hero from '../components/Hero'\r\nimport Layout from '../components/Layout'\r\nimport RecentPosts from '../components/RecentPosts'\r\nimport { graphql } from 'gatsby'\r\nimport Featured from '../components/featured/Featured'\r\nimport Seo from '../components/SEO'\r\nimport Notification from '../components/Notification'\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const {\r\n    allMdx: { nodes: posts },\r\n  } = data\r\n  const {\r\n    site: { siteMetadata: metadata },\r\n  } = data\r\n  return (\r\n    <Layout>\r\n      <Seo\r\n        title={`${metadata.title} | Promoting Free Education for Everyone`}\r\n        description={metadata.description.substr(0, 160)}\r\n      />\r\n\r\n      <Hero />\r\n\r\n      <Featured />\r\n      <Notification />\r\n      <RecentPosts posts={posts} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\nquery Home {\r\n  allMdx(limit: 3, sort: {frontmatter: {date: DESC}}) {\r\n    nodes {\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        category\r\n        date(formatString: \"MMMM, Do YYYY\")\r\n        image {\r\n          childImageSharp {\r\n            gatsbyImageData\r\n          }\r\n        }\r\n      }\r\n      id\r\n    }\r\n  }\r\n  site {\r\n    siteMetadata {\r\n      title\r\n      description\r\n      image\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport default IndexPage\r\n"],"names":["HeroStyles","styled","header","withConfig","displayName","componentId","Hero","React","className","categories","map","category","index","arr","length","categoryStyles","boxShadow","backgroundColor","color","Link","style","key","to","slugify","toLowerCase","query","RecentPosts","data","useStaticQuery","allMdx","nodes","posts","post","title","date","slug","image","frontmatter","id","lower","GatsbyImage","getImage","alt","AiOutlineClockCircle","Math","ceil","fields","timeToRead","words","GoCalendar","getColor","excerpt","href","SidebarWide","Top","Trending","Popular","FeaturedStyles","section","Featured","Notification","_ref","site","siteMetadata","metadata","Layout","Seo","description","substr"],"sourceRoot":""}